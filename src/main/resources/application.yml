spring:
  profiles:
    active: ${SPRING_PROFILES_ACTIVE:dev}
  config:
    import: optional:file:.env[.properties]
  jpa:
    open-in-view: false
    hibernate:
      ddl-auto: ${DDL_AUTO:validate}
    properties:
      hibernate:
        format_sql: true
        show_sql: true
  mail:
    host: email.master-of-prediction.shop
    port: 587
    username: ${MAIL_USERNAME}
    password: ${MAIL_PASSWORD}
    properties:
      mail:
        smtp:
          auth: true
          timeout: 5000
          starttls:
            enable: true
          ssl:
            trust: email.master-of-prediction.shop
  data:
    redis:
      host: ${REDIS_HOST:localhost}
      port: ${REDIS_PORT:6379}
  security:
    oauth2:
      client:
        registration:
          google:
            client-id: ${GOOGLE_CLIENT_ID}
            client-secret: ${GOOGLE_CLIENT_SECRET}
            scope:
              - email
              - profile
            redirect-uri: "{baseUrl}/login/oauth2/code/{registrationId}"
            authorization-grant-type: authorization_code
            client-name: Google
          kakao:
            client-id: ${KAKAO_CLIENT_ID}
            client-secret: ${KAKAO_CLIENT_SECRET}
            scope:
              - profile_nickname
              - account_email
            client-name: Kakao
            authorization-grant-type: authorization_code
            client-authentication-method: client_secret_post
            redirect-uri: "{baseUrl}/login/oauth2/code/{registrationId}"
        provider:
          google:
            authorization-uri: https://accounts.google.com/o/oauth2/v2/auth
            token-uri: https://oauth2.googleapis.com/token
            user-info-uri: https://www.googleapis.com/oauth2/v3/userinfo
            user-name-attribute: sub
          kakao:
            authorization-uri: https://kauth.kakao.com/oauth/authorize
            token-uri: https://kauth.kakao.com/oauth/token
            user-info-uri: https://kapi.kakao.com/v2/user/me
            user-name-attribute: id

logging:
  level:
    root: INFO
    org.springframework.web: DEBUG
    org.springframework.security: DEBUG
    com.outsider.reward: DEBUG

jwt:
  secret: ${JWT_SECRET}
  access-token-validity: 3600000  # 1시간 (밀리초)
  refresh-token-validity: 1209600000  # 14일 (밀리초)

minio:
  url: ${MINIO_URL:http://localhost:9000}
  access-key: ${MINIO_ACCESS_KEY}
  secret-key: ${MINIO_SECRET_KEY}
  bucket: ${MINIO_BUCKET:reward}

google:
  android:
    client-id: 133048024494-s3hl3npre9hrmqeokp4pqp36me559o50.apps.googleusercontent.com

app:
  frontend:
    url: ${FRONTEND_URL:http://localhost:46151}  # 개발 환경 기본값

discord:
  webhook:
    url: https://discord.com/api/webhooks/1314046241222557807/KUbSb5G5jb7p9JAnWsM0FSkpMRT2iloCVyk3Lpe6RnzF8bnP4IQzMn6Ty6Ss60PC88v4

toss:
  client:
    api-key: ${TOSS_API_KEY}
    secret-key: ${TOSS_SECRET_KEY}
    success-url: http://localhost:8080/api/v1/payments/toss/success
    fail-url: http://localhost:8080/api/v1/payments/toss/fail