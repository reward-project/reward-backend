spring:
  profiles:
    active: ${SPRING_PROFILES_ACTIVE:dev}
  config:
    import: optional:file:.env[.properties]
  jpa:
    open-in-view: false
    hibernate:
      ddl-auto: validate
    properties:
      hibernate:
        format_sql: true
        show_sql: true
  mail:
    host: email.master-of-prediction.shop
    port: 587
    username: ${MAIL_USERNAME}
    password: ${MAIL_PASSWORD}
    properties:
      mail:
        smtp:
          auth: true
          timeout: 5000
          starttls:
            enable: true
          ssl:
            trust: email.master-of-prediction.shop
  data:
    redis:
      host: localhost
      port: 6379
  security:
    oauth2:
      client:
        registration:
          google:
            client-id: ${GOOGLE_CLIENT_ID}
            client-secret: ${GOOGLE_CLIENT_SECRET}
            scope:
              - email
              - profile
        provider:
          google:
            authorization-uri: https://accounts.google.com/o/oauth2/v2/auth
            token-uri: https://oauth2.googleapis.com/token
            user-info-uri: https://www.googleapis.com/oauth2/v3/userinfo
            user-name-attribute: sub

jwt:
  secret: ${JWT_SECRET}
  access-token-validity: 3600000  # 1시간
  refresh-token-validity: 1209600000  # 2주

minio:
  url: ${MINIO_URL:http://localhost:9000}
  access-key: ${MINIO_ACCESS_KEY}
  secret-key: ${MINIO_SECRET_KEY}
  bucket: ${MINIO_BUCKET:reward}

google:
  android:
    client-id: 133048024494-s3hl3npre9hrmqeokp4pqp36me559o50.apps.googleusercontent.com

logging:
  level:
    org.springframework.web: DEBUG
    org.springframework.security: DEBUG
    com.outsider.reward: INFO

app:
  frontend:
    url: ${FRONTEND_URL:http://localhost:46151}  # 개발 환경 기본값